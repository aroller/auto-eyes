openapi: "3.0.0"

info:
    title: Auto Eyes
    version: "1.0"
servers:
    - url: http://localhost:9090/v1.0
      description: Typically used for testing during local development.
    - url: http://192.168.50.1:9090/v1.0
      description: A Raspberry PI server running on the local network.

paths:
    /actors/{actorId}:
        get:
            summary: Retrieves an actor's details
            description: Provides all details known about the actor identified by id.
            operationId: api.get_actor
            tags:
                - actors
            responses:
                200:
                    description: Actor's previously known location, if any.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Actor'
                404:
                    description: The actor is not found
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "abc123 is not currently being acknowledged"
            parameters:
                - $ref: '#/components/parameters/actorIdParam'
        put:
            summary: Acknowledges an actor's existence and intent
            description: Identifies a human is outside of the vehicle at a bearing, distance and its heaading.
            operationId: api.put_actor
            tags:
                - actors
            responses:
                200:
                    description: Actor's previously known location, if any.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Actor'
                204:
                    description: When the previous location of an actor is not known.
                409:
                    description: When out of sync (the given actor is seen before the previous).
            parameters:
                - $ref: '#/components/parameters/actorIdParam'
                - $ref: '#/components/parameters/bearingParam'
                - $ref: '#/components/parameters/actionParam'
                - $ref: '#/components/parameters/directionParam'
                - $ref: '#/components/parameters/urgencyParam'
                - $ref: '#/components/parameters/timeSeenParam'
        delete:
            summary: Vehicle no longer sees the actor
            description: Indicates a human previously seen is now out of range.
            operationId: api.delete_actor
            tags:
                - actors
            responses:
                204:
                    description: Simple response indicating deletion was successful.
                404:
                    description: Indicates the actor is not found
                    content:
                        text/plain:
                            schema:
                                type: boolean
                                example: "true"
        parameters:
            - $ref: '#/components/parameters/actorIdParam'
    /actors:
        get:
            summary: Lists actors currently seen
            description: Provides all actors currently being acknowledged.
            operationId: api.list_actors
            tags:
                - actors
            responses:
                200:
                    description: All of the actors currently being acknowledged.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Actor'
    /systems:
        put:
            summary: Shut down
            description: Graceful shutdown on the Raspberry PI
            operationId: api.system_shutdown
            tags:
                - system
            responses:
                200:
                    description: Shutdown as begun
                    content:
                        application/json:
                            schema:
                                type: string
                                example: anything
    /animations:
        put:
            summary: Updates communicators with animations
            description: Any communication with an animation will be refreshed if necessary
            operationId: api.animate
            tags:
                - animations
            responses:
                200:
                    description: animated
                    content:
                        application/json:
                            schema:
                                type: string
                                example: anything

components:
    schemas:
        Actor:
            properties:
                actorId:
                    type: string
                bearing:
                    type: integer
                action:
                    type: string
                    enum:
                        - seen
                        - stopped
                        - slowing
                        - moving
                urgency:
                    type: string
                    enum:
                        - request
                        - demand
                direction:
                    type: string
                    enum:
                        - right
                        - left
                timeSeen:
                    type: string
                    format: date-time
            # Both properties are required
            required:
                - actorId
                - bearing
    parameters:
        actorIdParam:
            name: actorId
            in: path
            description: Unique ientifier the AV uses to track the same actor.
            required: true
            schema:
                type: string
                example: "abc123"
        bearingParam:
            name: bearing
            in: query
            description: The relative angle to the actor. In clockwise degrees starting from the direction the vehicle is heading,
            required: true
            schema:
                type: number
                example: "138"
        actionParam:
            name: action
            in: query
            description: What the vehicle expects the actor to do. Limited choice enumeration.
            required: false
            schema:
                type: string
                enum:
                    - seen
                    - stopped
                    - slowing
                    - moving
        directionParam:
            name: direction
            in: query
            description: Acknowledging or encouraging an actor to move in a specfic direction, relative to the AV.  Right = clockwise, left = counterclockwise.
            required: false
            schema:
                type: string
                enum:
                    - right
                    - left
        urgencyParam:
            name: urgency
            in: query
            description: The level of importance the actor should follow a desired action.
            required: false
            schema:
                type: string
                enum:
                    - request
                    - demand
        timeSeenParam:
            name: timeSeen
            in: query
            description: The time the client observation was made in iso date time format.
            required: false
            schema:
                type: string
                format: date-time
                example: "2017-07-21T17:32:28Z"
